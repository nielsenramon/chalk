#!/usr/bin/env sh

set -e

# clean up target files
if test -d "./_site";then
    rm -R _site/*
fi

if test -d "./_my_tags";then
    rm -R _my_tags
fi

if test -e "./_posts/new_tags.md";then
    rm _posts/new_tags.md
fi

if test -e "./_posts/2018-09-26-new_tags.md";then
    rm _posts/2018-09-26-new_tags.md
fi


# populate _my_tags, and create directory
./bin/tag_scraper

if test ! -d "./_my_tags";then
  echo "Failed to create _my_tags directory"
  exit 1
fi

if test ! -e "./_my_tags/jekyll.md";then
  echo "Failed to generate _my_tags/jekyll.md"
  exit 1
fi

if test ! -e "./_my_tags/design.md";then
  echo "Failed to generate _my_tags/design.md"
  exit 1
fi

if test ! -e "./_my_tags/web.md";then
  echo "Failed to generate _my_tags/web.md"
  exit 1
fi

bundle exec jekyll build

if test ! -e "./_site/tag/web/index.html";then
  echo "Failed to build tag pages in site"
  exit 1
fi

if test ! -e "./_site/tags.html";then
  echo "Failed to build tags.html tag cloud page in site"
  exit 1
fi

echo "tags cloud, etc, built"

# now add a new post, and process it

cat <<EOF > "_posts/2018-09-26-new_tags.md"
---
layout: post
title: "Fake post with unique tags"
description: "The tag entries in _my_tags will be autogenerated."
tags: [automation, tags, tests]
---

This is a test post with some new tags.

EOF

./bin/tag_scraper

if test ! -e "./_my_tags/jekyll.md";then
  echo "Failed to generate _my_tags/jekyll.md"
  exit 1
fi

if test ! -e "./_my_tags/design.md";then
  echo "Failed to generate _my_tags/design.md"
  exit 1
fi

if test ! -e "./_my_tags/web.md";then
  echo "Failed to generate _my_tags/web.md"
  exit 1
fi

if test ! -e "./_my_tags/automation.md";then
  echo "Failed to generate _my_tags/automation.md"
  exit 1
fi

if test ! -e "./_my_tags/tags.md";then
  echo "Failed to generate _my_tags/tags.md"
  exit 1
fi

if test ! -e "./_my_tags/tests.md";then
  echo "Failed to generate _my_tags/tests.md"
  exit 1
fi

# build a second time
bundle exec jekyll build

echo "test new build of site"

if test ! -e "./_site/tag/tests/index.html"
then
  echo "Failed to build new tag pages in site"
  exit 1
else
    echo "found tests index page"
fi

if test ! -e "./_site/posts/new-tags.html"
then
    echo "Failed to add 2018-09-26-new-tags.md to site"
    exit 1
else
    echo "found posts/new-tags.html"
fi

for word in "automation" "design" "jekyll" "tags" "tests" "web"; do
    if grep -q $word "./_site/tags.html"; ##note the space after the string you are searching for
    then
        echo "Hooray!! Found $word in tag cloud"
    else
        echo "Oops!! $word not found"
        exit 1
    fi
done

# should ignore files that don't fit the jekyll post pattern
cat <<EOF > "_posts/hidden_tags.md"
---
layout: post
title: "Another fake post with unique tags"
description: "The tag entries in _my_tags should not be autogenerated."
tags: [bananas, pancakes]
---

This is a test post with some new tags.

EOF

./bin/tag_scraper

# build a third time
bundle exec jekyll build


if test -e "./_site/posts/hidden-tags.html"
then
    echo "Mistakenly added hidden-tags.html to site"
    exit 1
fi

for word in "bananas" "pancakes"; do
    if grep -q $word "./_site/tags.html"; ##note the space after the string you are searching for
    then
        echo "Oops!! $word was found, but should have been ignored"
        exit 1
    fi
done


echo "done"
